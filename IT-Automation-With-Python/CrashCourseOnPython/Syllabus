About this Course
This course is designed to teach you the foundations in order to write simple programs in Python using the most common structures. No previous exposure to programming is needed. By the end of this course, you'll understand the benefits of programming in IT roles; be able to write simple programs using Python; figure out how the building blocks of programming fit together; and combine all of this knowledge to solve a complex programming problem. 

We'll start off by diving into the basics of writing a computer program. Along the way, you’ll get hands-on experience with programming concepts through interactive exercises and real-world examples. You’ll quickly start to see how computers can perform a multitude of tasks — you just have to write code that tells them what to do.


 Show less
Basic Info	
Course 1 of 6 in the Google IT Automation with Python Specialization
Level	Beginner
Language	
English, Subtitles: Arabic, French, Portuguese (European), Italian, Vietnamese, Korean, German, Russian, Spanish
Volunteer to translate subtitles for this course
How To Pass	Pass all graded assignments to complete the course.
User Ratings	
Average User Rating 4.8
Syllabus
WEEK 1
Hello Python!
In this module we’ll introduce you to the Coursera platform and the course format. Then, we’ll dive into the basics of programming languages and syntax, as well as automation using scripting. We’ll also introduce you to the Python programming language and some of the benefits it offers. Last up, we’ll cover some basic functions and keywords of the language, along with some arithmetic operations.

14 videos, 5 readings, 3 practice quizzes
Video: Specialization Introduction
Video: Course Introduction
Ungraded Plugin: Take a Minute to Set Yourself up for Success
Reading: Welcome to the Course!
Reading: Program Surveys
Ungraded Plugin: Automation with Python Participant Entry Survey
Discussion Prompt: Meet & Greet
Video: The Beginning of Your Programming Journey
Video: What is programming?
Video: What is automation?
Video: Getting Computers to Work for You
Discussion Prompt: Your Hopes for Automation
Practice Quiz: Practice Quiz: Introduction to Programming
Video: What is Python?
Reading: A Note on Syntax and Code Blocks
Video: Why is Python relevant to IT?
Reading: More About Python
Video: Other Languages
Practice Quiz: Practice Quiz: Introduction to Python
Video: Hello, World!
Video: Getting Information from the User
Video: Python Can Be Your Calculator
Reading: First Programming Concepts Cheat Sheet
Practice Quiz: Practice Quiz: Hello World
Video: First Steps Wrap Up
Video: Meet Marga, the Curriculum Developer
Discussion Prompt: Your First Programming Code

Show lessweek 1 material
Graded: Module 1 Graded Assessment
WEEK 2
Basic Python Syntax
In this module you’ll learn about different data types in Python, how to identify them, and how to convert between them. You’ll also learn how to use variables to assign data and to reference variables. You’ll deep dive into functions: how to define them, pass them parameters, and have them return information. You’ll explore the concepts of code reuse, code style, and refactoring complex code, along with effectively using code comments. Finally, you’ll learn about comparing data using equality and logical operators, and leveraging these to build complex branching scripts using if statements.

Show less
14 videos, 9 readings, 3 practice quizzes
Video: Basic Python Syntax introduction
Video: Data Types
Reading: Data Types Recap
Video: Variables
Video: Expressions, Numbers, and Type Conversions
Reading: Implicit vs Explicit Conversion
Practice Quiz: Practice Quiz: Expressions and Variables
Video: Defining Functions
Reading: Defining Functions Recap
Video: Returning Values
Reading: Returning Values Using Functions
Video: The Principles of Code Reuse
Video: Code Style
Practice Quiz: Practice Quiz: Functions
Video: Comparing Things
Reading: Comparison Operators
Video: Branching with if Statements
Reading: if Statements Recap
Video: else Statements
Reading: else Statements and the Modulo Operator
Video: elif Statements
Reading: More Complex Branching with elif Statements
Reading: Conditionals Cheat Sheet
Practice Quiz: Practice Quiz: Conditionals
Video: Basic Syntax Wrap Up
Video: In Marga's Words: Why I Like Python
Discussion Prompt: Basic Python Syntax Review

Show lessweek 2 material
Graded: Module 2 Graded Assessment
WEEK 3
Loops
In this module you'll explore the intricacies of loops in Python! You'll learn how to use while loops to continuously execute code, as well as how to identify infinite loop errors and how to fix them. You'll also learn to use for loops to iterate over data, and how to use the range() function with for loops. You'll also explore common errors when using for loops and how to fix them.

13 videos, 7 readings, 3 practice quizzes
Video: Introduction to Loops
Video: What is a while loop?
Reading: Anatomy of a While Loop
Video: More while Loop Examples
Video: Why Initializing Variables Matters
Reading: Common Pitfalls With Variable Initialization
Video: Infinite Loops and How to Break Them
Reading: Infinite loops and Code Blocks
Practice Quiz: Practice Quiz: While Loops
Video: What is a for loop?
Reading: For Loops Recap
Video: More for Loop Examples
Reading: A Closer Look at the Range() Function
Video: Nested for Loops
Video: Common Errors in for Loops
Reading: Loops Cheat Sheet
Practice Quiz: Practice Quiz: For Loops
Video: What is recursion? (Optional)
Video: Recursion in Action in the IT Context
Reading: Additional Recursion Sources
Practice Quiz: Practice Quiz: Recursion
Video: Loops Wrap Up
Video: In Marga's Words: How I Got Into Programming
Discussion Prompt: Solving Problems with Loops

Show lessweek 3 material
Graded: Module 3 Graded Assessment
WEEK 4
Strings, Lists and Dictionaries
In this module you'll dive into more advanced ways to manipulate strings using indexing, slicing, and advanced formatting. You'll also explore the more advanced data types: lists, tuples, and dictionaries. You'll learn to store, reference, and manipulate data in these structures, as well as combine them to store complex data structures.

16 videos, 15 readings, 3 practice quizzes
Video: Basic Structures Introduction
Video: What is a string?
Video: The Parts of a String
Reading: String Indexing and Slicing
Video: Creating New Strings
Reading: Basic String Methods
Video: More String Methods
Reading: Advanced String Methods
Video: Formatting Strings
Reading: String Formatting
Reading: String Reference Cheat Sheet
Reading: Formatting Strings Cheat Sheet
Practice Quiz: Practice Quiz: Strings
Video: What is a list?
Reading: Lists Defined
Video: Modifying the Contents of a List
Reading: Modifying Lists
Video: Lists and Tuples
Reading: Tuples
Video: Iterating over Lists and Tuples
Reading: Iterating Over Lists Using Enumerate
Video: List Comprehensions
Reading: List Comprehensions
Reading: Lists and Tuples Operations Cheat Sheet
Practice Quiz: Practice Quiz: Lists
Video: What is a dictionary?
Reading: Dictionaries Defined
Video: Iterating over the Contents of a Dictionary
Reading: Iterating Over Dictionaries
Video: Dictionaries vs. Lists
Reading: Dictionary Methods Cheat Sheet
Practice Quiz: Practice Quiz: Dictionaries
Video: Basic Structures Wrap Up
Video: In Marga's Words: My Most Challenging Script
Discussion Prompt: Discussion Prompt

Show lessweek 4 material
Graded: Module 4 Graded Assessment
WEEK 5
Object Oriented Programming (Optional)
In this module, you'll be introduced to the concept of object-oriented programming! You'll learn how to build your own classes with unique attributes and methods. You'll get a chance to write documentation for your classes and methods using docstrings. You'll learn all about object instances and object inheritance, as well as how to import and use Python modules to make use of powerful classes and methods. To round things out, you'll also be introduced to Jupyter notebooks, which we'll use to write and execute more complex code.

More
13 videos, 12 readings, 1 practice quiz
Video: OOP Introduction (Optional)
Video: What is Object-oriented programming? (Optional)
Reading: Object-Oriented Programming Defined
Video: Classes and Objects in Python (Optional)
Reading: Classes and Objects in Detail
Video: Defining New Classes (Optional)
Reading: Defining Classes (Optional)
Practice Quiz: Practice Quiz: Object-oriented Programming (Optional)
Video: Instance Methods (Optional)
Reading: What Is a Method?
Video: Constructors and Other Special Methods (Optional)
Reading: Special Methods
Video: Documenting Functions, Classes, and Methods (Optional)
Reading: Documenting with Docstrings
Reading: Classes and Methods Cheat Sheet (Optional)
Video: About Jupyter Notebooks (Optional)
Reading: Help with Jupyter Notebooks (Optional)
Ungraded Lab: Methods and Classes (Optional)
Video: Inheritance (Optional)
Reading: Object Inheritance
Video: Composition (Optional)
Reading: Object Composition
Video: Python Modules (Optional)
Reading: Augmenting Python with Modules
Reading: Supplemental Reading for Code Reuse (Optional)
Ungraded Lab: Code Reuse (Optional)
Video: OOP Wrap Up (Optional)
Video: In Marga's Words: My Favorite Course (Optional)
Ungraded Lab: Practice Notebook: Object Oriented Programming (Optional)
Discussion Prompt: Object Oriented Programming Assignment (Optional)

Show lessweek 5 material
WEEK 6
Final Project
In this module, you'll put everything you've learned so far into action! You'll apply a problem-solving framework to tackle a challenging final project: implementing a script that generates a "word cloud" from some text.

You'll formulate a problem statement to understand the challenge, conduct some research to see what options are available, then begin planning how you intend to solve the problem. Lastly, you'll write the code to implement your solution!

More
11 videos, 1 reading
Video: Final Project Introduction
Video: Problem Statement
Video: Research
Video: Planning
Video: Writing the Script
Video: Putting It All Together
Video: Using Graded Jupyter Notebooks
Ungraded Lab: Putting It All Together
Video: In Marga's Words: Developing an Inclusive Curriculum
Video: Final Project Overview
Reading: Final Project Help
Ungraded Lab: Final Project: WordCloud
Discussion Prompt: Share your word cloud!
Video: Congratulations!
Discussion Prompt: Your Learner Journey
Video: Sneak Peek of the Next Course

Show lessweek 6 material
Graded: Programming: Final Project: WordCloud
