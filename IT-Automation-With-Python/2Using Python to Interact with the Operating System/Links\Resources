Automate The Boring Stuff With Python:
https://automatetheboringstuff.com/
The HitchHikers Guide To Python:
https://docs.python-guide.org/
Official Python Documentation:
https://docs.python.org/3/reference/index.html
Python IDE Tutorial: The Top 5 Python IDEs For Data Science:
https://www.datacamp.com/tutorial/data-science-python-ide
Reading and Writing Files:
https://docs.python.org/3/library/functions.html#open

OS module official documentation:
https://docs.python.org/3/library/os.html
OS.path official documentation:
https://docs.python.org/3/library/os.path.html
Unix time summary(January 1st 1970):
https://en.wikipedia.org/wiki/Unix_time

CSV Official Docs:
https://docs.python.org/3/library/csv.html
CSV CheatSheet:
https://realpython.com/python-csv/


Regular Expression official docs:
https://docs.python.org/3/howto/regex.html
re module official docs:
https://docs.python.org/3/library/re.html
Greedy vs NonGreedy RegEx:
https://docs.python.org/3/howto/regex.html#greedy-versus-non-greedy
Regular Expression Testing:
regex101.com
Regular Expression Crossword puzzles for practice:
https://regexcrossword.com/

Input official docs:
https://docs.python.org/3/library/functions.html#input
Eval official docs:
https://docs.python.org/3/library/functions.html#eval

Subprocess Module Official Docs:
https://docs.python.org/3/library/subprocess.html

UnitTest module Official Docs:
https://docs.python.org/3/library/unittest.html#basic-example
Unittest module through command line:
https://docs.python.org/3/library/unittest.html#command-line-interface
Understand various Unit Test Design Patterns:
https://docs.python.org/3/library/unittest.html#organizing-test-code
Understand more specific assertions such as assertRaises
https://docs.python.org/3/library/unittest.html#unittest.TestCase.assertRaises

Jupyter Notebooks resources:
https://learner.coursera.help/hc/en-us/articles/360004995312-Solve-problems-with-Jupyter-Notebooks
Jupyter Notebook Tutorial, by datacamp.com:
https://www.datacamp.com/community/tutorials/tutorial-jupyter-notebook
How to use Jupyter Notebooks, by codeacademy.com:
https://www.codecademy.com/articles/how-to-use-jupyter-notebooks
Teaching and Learning with Jupyter, by university professors using Jupyter:
https://jupyter4edu.github.io/jupyter-edu-book/

Various Testing Methods:
https://landing.google.com/sre/sre-book/chapters/monitoring-distributed-systems/
https://landing.google.com/sre/sre-book/chapters/testing-reliability/
https://testing.googleblog.com/2007/10/performance-testing.html
https://www.guru99.com/smoke-testing.html
https://www.guru99.com/exploratory-testing.html
https://testing.googleblog.com/2008/09/test-first-is-fun_08.html

Unit Testing Errors:
Handling Errors Cheat-Sheet:
https://docs.python.org/3/tutorial/errors.html#raising-exceptions
Assert enables you to verify if a certain condition is met and throw an exception if it isnâ€™t.:
https://docs.python.org/3/reference/simple_stmts.html#the-assert-statement
https://stackoverflow.com/questions/5142418/what-is-the-use-of-assert-in-python
The standard library documentation is kind of unclear. Basically `assert <something false>` will raise AssertionError, which the caller may need to handle.
In the try clause, all statements are executed until an exception is encountered:
https://docs.python.org/3/tutorial/errors.html#handling-exceptions
Except is used to catch and handle the exception(s) that are encountered in the try clause:
https://docs.python.org/3/library/exceptions.html#bltin-exceptions
Other interesting Exception handling readings:
https://doughellmann.com/posts/python-exception-handling-techniques/
