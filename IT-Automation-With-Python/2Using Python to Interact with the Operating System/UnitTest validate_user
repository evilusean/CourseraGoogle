#!/usr/bin/env python3
#a simple script that checks potential usernames
def validate_user(username, minlen):
  assert type(username == str, "username must be a string")#if function is called with a parameter that is not a string it will raise an assertion error
  if minlean < 1:
    raise ValueError("minlen must be at least 1")
  if len(username) < minlen:
    return False
  if not username.isalnum():#checks if it is an alphanumeric
    return False
  return True
  
"""Unit Test for our function"""
#!/usr/bin/env python3
import unittest
#import function from above validate_user.py
from validations import validate_user
#create test classes

class TestValidateUser(unittest.TestCase):
  def test_valid(self):
    self.assertEqual(validate_user("validuser", 3), True)
    
  def test_too_short(self):
    self.assertEqual(validate_user("inv", 5), False)
    
  def test_invalid_characters(self):
    self.assertEqual(validate_user("invalid_user", 1) False)
    
  def test_invalid_minlen(self):
    self.assertRaises(ValueError, validate_user, "user", -1)
    #you need to input which error will come up first when testing for errors
#run the tests
unittest.main()

