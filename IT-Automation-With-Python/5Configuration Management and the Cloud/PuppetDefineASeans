Scale:
Have larger impacts with the same amount of effort
Unmanaged:
Manually deploying a server, more servers=more time
Configuration Management Systems:
Configuration management is a systems engineering process for establishing and maintaining consistency of a product's(or fleet) performance
Infrastructure as code(IAC):
When all the configuration necessary to deploy and manage a node in the infrastructure is stored in version control
deployed using automatic tools for the configuration

In puppet the client connects to server and uploads a list of facts to the server, the server then updates itself according to the list of rules
Client=Puppet Agent 
Server=Puppet Master
puppet is consistent, versionable, reliable, repeatable

Resources=The basic unit for modeling the configuration that we want to manage(service, package, file)
Puppet Syntax=Variables, Conditional Statements, Functions
Facts=Variables that represent the charasteristics of the system using Factor(OS/Memory/VM/IP/etc)
manifest=a puppet file with .pp extension
catalog=the list of rules that are generated for one specific computer once the server has evaluated all variables, conditionals, and functions
module=collection of manifests and associated data(contains manfiests, files, templates)
Node=any system where we can run a puppet agent

Fully qualified domain name=sometimes also referred to as an absolute domain name, is a domain name that specifies its exact location in the tree
hierarchy of the Domain Name System (DNS).
Public Key Inrastructure(PKI):used by puppet to form connections between server and clients
Secure Sockets Layer(SSL): used by Puppet/HTTPS as a PKI for verification of identity, encrypted
Certificate Authority(CA): Verifies public and private keys for verification

production= the parts of the infrastructure where a service is executed and served to its users
always test before putting on production machines

idempotent=An action can be performed over and over again without changing the system after the first time the action was performed with
no unintented side effects

test and repair paradigm=actions are taken only if necessary to acheive a goal

stateless=no state being kept inbetween runs of puppet 

Puppet Templates:
Templates are documents that combine code, data, and literal text to produce a final rendered output. The goal of a template is to manage a complicated piece of text with simple inputs.
In Puppet, you'll usually use templates to manage the content of configuration files (via the content attribute of the file resource type).
Templates are written in a templating language, which is specialized for generating text from data. Puppet supports two templating languages:
Embedded Puppet (EPP) uses Puppet expressions in special tags. It's easy for any Puppet user to read, but only works with newer Puppet versions. (â‰¥ 4.0, or late 3.x versions with future parser enabled.)
Embedded Ruby (ERB) uses Ruby code in tags. You need to know a small bit of Ruby to read it, but it works with all Puppet versions.



